_bootstrap=0

base=${arch}-gcc
version=6.2.0
_rversion=$version
release=2
sources=("https://ftp.gnu.org/gnu/gcc/gcc-$_rversion/gcc-${_rversion}.tar.bz2")
sha1sum=('583e29c7fe69d9a1031a89752c2551ab5aeacb91')
hostdepends=("${arch}-binutils")
[[ $_bootstrap -gt 1 ]] || makedepends=('glibc-devel')

description="GNU Compiler Collection for cross-compiling to $host"

build() {
  local archflags
  local extraflags

  case $arch in
  armv7hl) archflags=(
      --with-arch=armv7-a
      --with-fpu=neon
      --with-float=hard
      --with-mode=thumb
      --with-linker-hash-style=gnu
    );;
  rpi) archflags=(
      --with-cpu=arm1176jzf-s
      --with-fpu=vfp
      --with-float=hard
      --with-mode=arm
      --with-linker-hash-style=gnu
    );;
  x86_64) archflags=(
      --with-arch=core2
      --with-tune=generic
      --with-linker-hash-style=gnu
    )
    cd gcc-$version
    patch -Np1 -i "$srcdir/libdir.patch"
    cd ..
    ;;
  quark) archflags=(
      --with-arch=i586
      --with-linker-hash-style=gnu
    );;
  mips) archflags=(
      --with-endian=big
      --with-arch=mips32r2
      --with-abi=32
      --with-float=soft
      --with-llsc
      --with-mips-plt
    );;
  mipsel) archflags=(
      --with-endian=little
      --with-arch=mips32r2
      --with-abi=32
      --with-float=soft
      --with-llsc
      --with-mips-plt
    );;
  *)
    echo "Unknown architecture '$arch'."
    exit 1
    ;;
  esac

  case $_bootstrap in
  0) extraflags=(
      --enable-languages=c,c++,lto
      --enable-lto
      --enable-shared
      --with-sysroot=/not/exist
      --with-build-sysroot="$SYSROOT"
    );;
  1) extraflags=(
      --enable-languages=c
      --disable-shared
      --disable-libatomic
      --disable-libquadmath
      --disable-libmpx
      --with-sysroot=/not/exist
      --with-build-sysroot="$SYSROOT"
    );;
  2) extraflags=(
      --enable-languages=c
      --disable-shared
      --disable-libgcc
      --disable-libatomic
      --disable-libquadmath
      --disable-libmpx
      --without-headers
    );;
  esac

  mkdir build
  cd build

  CFLAGS_FOR_TARGET="$TARGET_CFLAGS" \
  CXXFLAGS_FOR_TARGET="$TARGET_CXXFLAGS" \
  AR_FOR_TARGET=${host}-ar \
  AS_FOR_TARGET=${host}-as \
  LD_FOR_TARGET=${host}-ld \
  NM_FOR_TARGET=${host}-nm \
  OBJDUMP_FOR_TARGET=${host}-objdump \
  RANLIB_FOR_TARGET=${host}-ranlib \
  READELF_FOR_TARGET=${host}-readelf \
  STRIP_FOR_TARGET=${host}-strip \
  CFLAGS='-O2 -pipe -g0' \
  CXXFLAGS='-O2 -pipe -g0' \
  LDFLAGS='-Wl,-z,relro' \
  ../gcc-$version/configure \
    --target=$host \
    --prefix=/tools \
    --libexecdir=/tools/lib \
    --enable-threads=posix \
    --enable-__cxa_atexit \
    --enable-gnu-indirect-function \
    --enable-checking=release \
    --disable-plugin \
    --disable-multilib \
    --disable-libgomp \
    --disable-libsanitizer \
    --disable-libssp \
    --disable-libvtv \
    --disable-nls \
    --with-glibc-version=2.24 \
    --with-gnu-as \
    --with-gnu-ld \
    --with-diagnostics-color=auto \
    "${extraflags[@]}" \
    "${archflags[@]}"

  AR_FOR_TARGET=${host}-ar \
  AS_FOR_TARGET=${host}-as \
  LD_FOR_TARGET=${host}-ld \
  NM_FOR_TARGET=${host}-nm \
  OBJDUMP_FOR_TARGET=${host}-objdump \
  RANLIB_FOR_TARGET=${host}-ranlib \
  READELF_FOR_TARGET=${host}-readelf \
  STRIP_FOR_TARGET=${host}-strip \
  make
}

package() {
  cd build
  make DESTDIR="$builddir" install
  cd ..

  # Create wrappers to set sysroot from environment
  mv tools/bin/${host}-cpp{,.orig}
  cat > tools/bin/${host}-cpp <<EOF
#!/bin/bash
exec -a "\$0" ${host}-cpp.orig --sysroot "\$SYSROOT" "\$@"
EOF
  chmod 0755 tools/bin/${host}-cpp

  mv tools/bin/${host}-gcc{,.orig}
  cat > tools/bin/${host}-gcc <<EOF
#!/bin/bash
exec -a "\$0" ${host}-gcc.orig --sysroot "\$SYSROOT" "\$@"
EOF
  chmod 0755 tools/bin/${host}-gcc
  rm tools/bin/${host}-gcc-$_rversion
  ln tools/bin/${host}-{gcc,gcc-$_rversion}

  if [[ $_bootstrap = 0 ]]; then
    mv tools/bin/${host}-g++{,.orig}
    cat > tools/bin/${host}-g++ <<EOF
#!/bin/bash
exec -a "\$0" ${host}-g++.orig --sysroot "\$SYSROOT" "\$@"
EOF
    chmod 0755 tools/bin/${host}-g++
    rm tools/bin/${host}-c++
    ln tools/bin/${host}-{g++,c++}

    # Move python gdb files so we can have several toolchains installed
    mv tools/share/gcc-$_rversion tools/share/${host}-gcc-$_rversion
  fi

  # Remove unwanted files
  rm tools/$host/lib/*.la
  rm -f tools/lib/libcc1.*
  rmdir tools/include
  rm -r tools/share/info
  rm -r tools/share/man/man7
}

# vim: set ft=sh ts=2 sw=2 et:
