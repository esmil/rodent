parts=(libpam libpam_misc libpamc pam-man
  pam_filter
  pam_mkhomedir
  pam_tally
  pam_tally2
  pam_timestamp
  pam_unix
  pam_pwhistory
)
_basic=(access debug deny echo env exec faildelay ftp group issue keyinit lastlog limits listfile localuser loginuid mail motd namespace nologin permit rhosts rootok securetty shells stress succeed_if time umask warn wheel xauth)
for i in "${_basic[@]}"; do
  parts+=("pam_$i")
done
version=1.2.1
release=1
sources=("http://linux-pam.org/library/Linux-PAM-${version}.tar.bz2")
sha1sum=('3620ab5f5e02272825c426622761a19a1a2facca')
makedepends=('libutil-devel' 'libcrypt-devel')

config-libpam() {
  description='PAM library'
  depends=('glibc')
  devdepends=('glibc-devel' "libpam=$version-$release")
  files=('usr/lib/libpam.so.*')
  devfiles=(
    'usr/include/**'
    'usr/lib/libpam.a'
    'usr/lib/libpam.so'
  )
  manfiles=('usr/share/man/man3/**')
}

config-libpam_misc() {
  description='PAM misc library'
  depends=("libpam=$version-$release")
  devdepends=("libpam-devel=$version-$release" "libpam_misc=$version-$release")
  files=('usr/lib/libpam_misc.so.*')
  devfiles=(
    'usr/lib/libpam_misc.a'
    'usr/lib/libpam_misc.so'
  )
}

config-libpamc() {
  description='PAM pamc library'
  depends=('glibc')
  devdepends=("libpam-devel=$version-$release" "libpamc=$version-$release")
  files=('usr/lib/libpamc.so.*')
  devfiles=(
    'usr/lib/libpamc.a'
    'usr/lib/libpamc.so'
  )
}

config-pam-man() {
  description='PAM manual pages'
  files=('usr/share/man/man5/**' 'usr/share/man/man8/**')
}

config-pam_filter() {
  description='PAM filter module'
  depends=("libpam=$version-$release")
  devdepends=("libpam-devel=$version-$release" "pam_filter=$version-$release")
  files=('usr/lib/security/pam_filter/*' 'usr/lib/security/pam_filter.so')
  devfiles=('usr/lib/security/pam_filter.a')
}

config-pam_mkhomedir() {
  description='PAM mkhomedir module'
  depends=("libpam=$version-$release")
  devdepends=("libpam-devel=$version-$release" "pam_mkhomedir=$version-$release")
  files=('usr/bin/mkhomedir_helper' 'usr/lib/security/pam_mkhomedir.so')
  devfiles=('usr/lib/security/pam_mkhomedir.a')
}

config-pam_timestamp() {
  description='PAM timestamp module'
  depends=("libpam=$version-$release")
  devdepends=("libpam-devel=$version-$release" "pam_timestamp=$version-$release")
  files=('usr/bin/pam_timestamp_check' 'usr/lib/security/pam_timestamp.so')
  devfiles=('usr/lib/security/pam_timestamp.a')
}

config-pam_tally() {
  description='PAM tally module'
  depends=("libpam=$version-$release")
  devdepends=("libpam-devel=$version-$release" "pam_tally=$version-$release")
  files=('usr/bin/pam_tally' 'usr/lib/security/pam_tally.so')
  devfiles=('usr/lib/security/pam_tally.a')
}

config-pam_tally2() {
  description='PAM tally2 module'
  depends=("libpam=$version-$release")
  devdepends=("libpam-devel=$version-$release" "pam_tally2=$version-$release")
  files=('usr/bin/pam_tally2' 'usr/lib/security/pam_tally2.so')
  devfiles=('usr/lib/security/pam_tally2.a')
}

config-pam_unix() {
  description='PAM unix module'
  depends=("libpam=$version-$release" 'libcrypt')
  devdepends=("libpam-devel=$version-$release" "pam_unix=$version-$release")
  files=('usr/bin/unix_chkpwd' 'usr/lib/security/pam_unix.so')
  devfiles=('usr/lib/security/pam_unix.a')
}

config-pam_pwhistory() {
  description='PAM pwhistory module'
  depends=("libpam=$version-$release" 'libcrypt')
  devdepends=("libpam-devel=$version-$release" "pam_pwhistory=$version-$release")
  files=('usr/lib/security/pam_pwhistory.so')
  devfiles=('usr/lib/security/pam_pwhistory.a')
}

for i in "${_basic[@]}"; do
  eval "config-pam_$i() { description='PAM $i module'; depends=(\"libpam=\$version-\$release\"); devdepends=(\"libpam-devel=\$version-\$release\" \"pam_${i}=\$version-\$release\"); files=('usr/lib/security/pam_${i}.so'); devfiles=('usr/lib/security/pam_${i}.a'); }"
done

prepare() {
  cd "Linux-PAM-$version"
  patch -Np1 -i ../libtool.patch
}

build() {
  "../Linux-PAM-$version/configure" \
    --host=$HOST \
    --prefix=/usr \
    --libdir=/usr/lib \
    --sbindir=/usr/bin \
    --enable-static \
    --enable-db=no \
    --disable-cracklib \
    --disable-audit \
    --disable-nis \
    --disable-selinux \
    --disable-regenerate-docu \
    --disable-nls \
    --disable-rpath \
    --with-gnu-ld \
    --with-sysroot="$SYSROOT"

  make
}

package() {
  make DESTDIR="$pkgdir" install

  install -dm755 "$pkgdir/usr/share/factory"
  mv "$pkgdir/etc" "$pkgdir/usr/share/factory"

  # this shouldn't be needed when selinux is disabled
  rm "$pkgdir/usr/bin/unix_update"

  rm -r "$pkgdir/usr/share/doc"
  rm "$pkgdir"/usr/lib/{,security/}*.la
}

# vim: set ft=sh ts=2 sw=2 et:
