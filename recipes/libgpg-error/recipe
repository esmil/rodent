parts=(libgpg-error libgpg-error-devel gpg-error)
version=1.20
release=1
sources=("ftp://ftp.gnupg.org/gcrypt/libgpg-error/libgpg-error-${version}.tar.bz2")
sha1sum=('89c961f63469739fe816a56dcdd86c2e1897cace')
makedepends=('glibc-devel')

config-libgpg-error() {
  description='Common error codes and useful functions for GnuPG related software'
  depends=('glibc')
  files=('usr/lib/libgpg-error.so.*')
}

config-libgpg-error-devel() {
  description='Development files for libgpg-error'
  depends=('glibc-devel' "libgpg-error=$version-$release")
  files=(
    'usr/include/gpg-error.h'
    'usr/bin/gpg-error-config'
    'usr/lib/libgpg-error.a'
    'usr/lib/libgpg-error.so'
    'usr/share/aclocal/gpg-error.m4'
  )
  manfiles=('usr/share/man/man1/gpg-error-config.1')
}

config-gpg-error() {
  description='Helper utility for libgpg-error'
  depends=("libgpg-error=$version-$release")
  files=('usr/bin/gpg-error')
}

build() {
  cd "libgpg-error-$version"

  case $ARCH in
  armv7hl)
    cp src/syscfg/lock-obj-pub.{arm-unknown-linux-gnueabihf,$HOST}.h;;
  quark)
    cp src/syscfg/lock-obj-pub.{i486-pc-gnu,$HOST}.h;;
  esac

  ./configure \
    gl_cv_have_weak=yes \
    --host=$HOST \
    --prefix=/usr \
    --enable-static \
    --enable-threads=posix \
    --disable-nls \
    --disable-rpath \
    --disable-languages \
    --with-gnu-ld \
    --with-sysroot="$SYSROOT"

  make
}

package() {
  cd "libgpg-error-$version"

  make DESTDIR="$pkgdir" install

  rm "$pkgdir"/usr/lib/*.la
  rm -r "$pkgdir/usr/share/info"
}

# vim: set ft=sh ts=2 sw=2 et:
