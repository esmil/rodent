_openssl='USE_OPENSSL=1'
parts=(libreg crda regdbdump)
version=3.18
release=2
sources=("https://kernel.org/pub/software/network/crda/crda-${version}.tar.xz")
sha1sum=('16e5a1b67a168d37c28245d681512cbc46f865d9')
if [[ $_openssl ]]; then
  makedepends=('libnl-genl-3-devel' 'libssl-devel')
else
  makedepends=('libnl-genl-3-devel' 'libgcrypt-devel')
fi

config-libreg() {
  description='Wireless regulatory domain library'
  depends=('libc')
  devdepends=('glibc-devel' "libreg=$version-$release")
  files=('usr/lib/libreg.so')
  devfiles=('usr/include/reglib/*.h')
}

config-crda() {
  description='Central regulatory domain agent'
  depends=('libm' "libreg=$version-$release" 'libnl-genl-3' 'wireless-regdb')
  if [[ $_openssl ]]; then
    depends+=('libcrypto')
  else
    depends+=('libgcrypt')
  fi
  files=('usr/bin/crda' 'usr/lib/udev/rules.d/85-regulatory.rules')
  manfiles=('usr/share/man/man8/crda.8')
}

config-regdbdump() {
  description='Dump regulatory domain database'
  depends=('libm' "libreg=$version-$release")
  if [[ $_openssl ]]; then
    depends+=('libcrypto')
  else
    depends+=('libgcrypt')
  fi
  files=('usr/bin/regdbdump')
  manfiles=('usr/share/man/man8/regdbdump.8')
}

build() {
  cd crda-$version
  sed -e '1s/python/python2/' -i utils/key2pub.py
  patch -Np1 -i "$srcdir/Makefile.patch"
  patch -Np1 -i "$srcdir/keys-gcrypt.patch"
  case $arch in
  x86_64) patch -Np1 -i "$srcdir/openssl64bit.patch";;
  *)      patch -Np1 -i "$srcdir/openssl32bit.patch";;
  esac

  unset MAKEFLAGS
  make V=1 \
    $_openssl \
    CC=${host}-gcc \
    all_noverify
}

package() {
  cd crda-$version
  make \
    DESTDIR="$pkgdir" \
    UDEV_RULE_DIR=/usr/lib/udev/rules.d/ \
    SBINDIR=/usr/bin/ \
    LDCONFIG=true \
    CRDA_8=crda.8 \
    REGDBDUMP_8=regdbdump.8 \
    install
}

# vim: set ft=sh ts=2 sw=2 et:
